trigger:
  - main

pool:
  vmImage: "ubuntu-latest"

steps:
  - script: echo K8S Terraform AWS!
    displayName: "Run a one-line script"

  - task: TerraformTaskV4@4
    inputs:
      provider: "aws"
      command: "init"
      workingDirectory: "$(System.DefaultWorkingDirectory)/configuration/iaac/aws/backend"
      backendServiceAWS: "aws-for-terraform"
      backendAWSBucketName: "terraform-backend-state-mmmihaeel-123-prod"
      backendAWSKey: "kubernetes-prod.tfstate"

  # - task: TerraformTaskV4@4
  #   inputs:
  #     provider: "aws"
  #     command: "apply"
  #     workingDirectory: "$(System.DefaultWorkingDirectory)/configuration/iaac/aws/backend"
  #     environmentServiceNameAWS: "aws-for-terraform"

  # - task: TerraformTaskV4@4
  #   inputs:
  #     provider: "aws"
  #     command: "destroy"
  #     workingDirectory: "$(System.DefaultWorkingDirectory)/configuration/iaac/aws/backend"
  #     environmentServiceNameAWS: "aws-for-terraform"

  - task: TerraformTaskV4@4
    inputs:
      provider: "aws"
      command: "init"
      workingDirectory: "$(System.DefaultWorkingDirectory)/configuration/iaac/aws/kubernetes"
      backendServiceAWS: "aws-for-terraform"
      backendAWSBucketName: "terraform-backend-state-mmmihaeel-123-prod"
      backendAWSKey: "kubernetes-prod.tfstate"

  - task: TerraformTaskV4@4
    inputs:
      provider: "aws"
      command: "apply"
      workingDirectory: "$(System.DefaultWorkingDirectory)/configuration/iaac/aws/kubernetes"
      environmentServiceNameAWS: "aws-for-terraform"

  # - task: TerraformTaskV4@4
  #   inputs:
  #     provider: "aws"
  #     command: "destroy"
  #     workingDirectory: "$(System.DefaultWorkingDirectory)/configuration/iaac/aws/kubernetes"
  #     environmentServiceNameAWS: "aws-for-terraform"
